AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst

Parameters:
  ExternalPackages:
    Type: String
    Description: external packages not needed in bundle
    Default: "@aws-sdk/client-s3,@aws-sdk/client-dynamodb,commons,axios"
  Region:
    Type: String
    Description: region
    Default: "us-east-1"
  Environment:
    Default: dev
    Type: String
    Description: Current environment
  # AppURL:
  #   Default: <replace-with-api-url>
  #   Type: String
  #   Description: App URL
  # ApiURL:
  #   Default: <replace-with-api-url>
  #   Type: String
  #   Description: API URL
  # LambdaRole:
  #   Type: String
  #   Description: role for lambda execution
  #   Default: "<default-lambda-role-arn>"
  # tnAppId:
  #   Type: String
  #   Description: Tiendanube app id
  #   Default: "<tiendanube-app-id>"
  # tnAppSecret:
  #   Type: String
  #   Description: Tiendanube app secret
  #   Default: <tiendanube-app-secret>
  # tnUrlAuthToken:
  #   Type: String
  #   Description: Url de autorizaci√≥n de Tiendanube
  #   Default: https://www.tiendanube.com/apps/authorize/token
  # ClientsTableName:
  #   Type: String
  #   Description: name of dynamo table
  #   Default: "<app-name>-clients-dev"


Globals:
  Function:
    Timeout: 3
    Runtime: nodejs20.x
    Architectures:
      - x86_64
    Handler: index.handler
    Environment:
      Variables:
        REGION: !Ref Region
        ENVNAME: !Ref Environment

  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'content-type,authorization'"
      AllowOrigin: "'*'"
      AllowCredentials: "'*'"
  # Define all the required Authorizers.
    # Auth:
    #   Authorizers:
    #     LambdaTokenAuthorizer:
    #       Identity:
    #         Header: Authorization
    #         ValidationExpression: Bearer.*
    #       FunctionArn: !GetAtt <replace-with-authorizer-logical-id>.Arn

Resources:
# Layers
  commons:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes: 
        - nodejs20.x
      ContentUri: layers/commons/dist
      Description: Shared code layer
      LayerName: !Sub "commons-${Environment}"
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: nodejs20.x
      BuildArchitecture: x86_64
# Lambdas    
  HelloWorld:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/hello-world/
      FunctionName: !Sub "HelloWorld-${Environment}"
      Role: !Ref LambdaRole
      Layers:
        - !Ref commons
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: !Split [",", !Ref ExternalPackages]
        Minify: false
